# volume_persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  # specifiy the capacity of the PersistentVolume
  capacity:
    storage: "100Mi"
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: manual
  hostPath:
    path: "/mnt/data"
    # specify the hostPath on the node
    # that's the path we specified on our node
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
spec:
  resources:
    requests:
      # we request the same as the PV is specified
      # so we basically request everything
      storage: "100Mi"
  volumeMode: Filesystem
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pv-pvc-deployment
spec:
  selector:
    matchLabels:
      app: pv-pvc
  template:
    metadata:
      labels:
        app: pv-pvc
    spec:
      volumes:
        - name: data
          # define the use of the PVC by specifying the name
          # specify the pod/deployment can use the PVC
          persistentVolumeClaim:
            claimName: mypvc
      containers:
      - name: pv-pvc
        image: nginx:latest
        volumeMounts:
          - mountPath: "/usr/share/nginx/html"
            # since the PVC is stated, the container needs to 
            # mount inside it
            # name is equal to the pvc name specified
            name: data
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: pv-pvc
spec:
  type: LoadBalancer
  selector:
    app: pv-pvc
  ports:
  - port: 80
    targetPort: 80